// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/artists": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Récupère tous les artistes",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Artists"
                ],
                "summary": "Récupère tous les artistes",
                "operationId": "get-all-artists",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Artist"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Créé un artiste",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Artists"
                ],
                "summary": "Créé un artiste",
                "operationId": "create-artist",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Artist"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/artists/{id}": {
            "get": {
                "description": "Récupère un artiste par ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Artists"
                ],
                "summary": "Récupère un artiste",
                "operationId": "get-artist",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "ID de l'artiste",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Artist"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Supprime un artiste par ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Artists"
                ],
                "summary": "Supprime un artiste",
                "operationId": "delete-artist",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "ID de l'artiste",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/models.Artist"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Met à jour un artiste par ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Artists"
                ],
                "summary": "Met à jour un artiste",
                "operationId": "update-artist",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "ID de l'artiste",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Nom de l'artiste",
                        "name": "artist",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.ArtistPatchInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Artist"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Récupère toutes les catégories",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Récupère toutes les catégories",
                "operationId": "get-all-categories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Category"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Créé une catégorie",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Créé une catégorie",
                "operationId": "create-category",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Category"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/categories/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Récupère une catégorie par ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Récupère une catégorie",
                "operationId": "get-category",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de la catégorie",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Category"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Supprime une catégorie par ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Supprime une catégorie",
                "operationId": "delete-category",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de la catégorie",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Modifie une catégorie par ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Modifie une catégorie",
                "operationId": "update-category",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID de la catégorie",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Nom de la catégorie",
                        "name": "name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.CategoryPatchInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Category"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/concerts": {
            "get": {
                "description": "Récupère tous les concerts",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Concerts"
                ],
                "summary": "Récupère tous les concerts",
                "operationId": "get-all-concerts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Concert"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Créé un concert",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Concerts"
                ],
                "summary": "Créé un concert",
                "operationId": "create-concert",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Nom du concert",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Concert"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/concerts/artist/{id}": {
            "get": {
                "description": "Récupère les concerts par ID d'artiste",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Concerts"
                ],
                "summary": "Récupère les concerts par ID d'artiste",
                "operationId": "get-concerts-by-artist-id",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "ID de l'artiste",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Concert"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/concerts/{id}": {
            "get": {
                "description": "Récupère un concert par ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Concerts"
                ],
                "summary": "Récupère un concert",
                "operationId": "get-concert",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "ID du concert",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Concert"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Supprime un concert par ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Concerts"
                ],
                "summary": "Supprime un concert",
                "operationId": "delete-concert",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "ID du concert",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Modifie un concert par ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Concerts"
                ],
                "summary": "Modifie un concert",
                "operationId": "update-concert",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "ID du concert",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Nom du concert",
                        "name": "name",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Concert"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/config/{key}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Récupérer la valeur d'une configuration",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configurations"
                ],
                "summary": "Récupérer la valeur d'une configuration",
                "operationId": "get-config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Clé de la configuration",
                        "name": "key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "default"
                    },
                    "404": {
                        "description": "default"
                    },
                    "500": {
                        "description": "default"
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Mettre à jour la valeur d'une configuration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configurations"
                ],
                "summary": "Mettre à jour la valeur d'une configuration",
                "operationId": "update-config",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Clé de la configuration",
                        "name": "key",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Valeur de la configuration",
                        "name": "value",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "default"
                    },
                    "500": {
                        "description": "default"
                    }
                }
            }
        },
        "/conversations": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Créé une conversation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Conversations"
                ],
                "summary": "Créé une conversation",
                "operationId": "create-conversation",
                "parameters": [
                    {
                        "description": "Conversation à créer",
                        "name": "conversation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Conversation"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/conversations/check": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Vérifie si une conversation existe",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Conversations"
                ],
                "summary": "Vérifie si une conversation existe",
                "operationId": "check-conversation",
                "parameters": [
                    {
                        "type": "string",
                        "name": "buyer_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "ticket_listing_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ID\" \"ID de la conversation",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/conversations/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Récupère une conversation par ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Conversations"
                ],
                "summary": "Récupère une conversation",
                "operationId": "get-conversation",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "ID de la conversation",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Conversation"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Met à jour une conversation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Conversations"
                ],
                "summary": "Met à jour une conversation",
                "operationId": "update-conversation",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "ID de la conversation",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Price",
                        "name": "conversation",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Conversation"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/create-payment-intent": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a payment intent",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment"
                ],
                "summary": "Create a payment intent",
                "operationId": "create-payment-intent",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.CreatePaymentIntentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/forgot-password": {
            "post": {
                "description": "Envoie un email de réinitialisation de mot de passe",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Envoie un email de réinitialisation de mot de passe",
                "operationId": "forgot-password",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email de l'utilisateur",
                        "name": "email",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/interests": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Récupère tous les centres d'intérêts",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Interests"
                ],
                "summary": "Récupère tous les centres d'intérêts",
                "operationId": "get-all-interests",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Interest"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Créé un centre d'intérêt",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Interests"
                ],
                "summary": "Créé un centre d'intérêt",
                "operationId": "create-interest",
                "parameters": [
                    {
                        "description": "Centre d'intérêt à créer",
                        "name": "interest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Interest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Interest"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/interests/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Récupère un centre d'intérêt par ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Interests"
                ],
                "summary": "Récupère un centre d'intérêt",
                "operationId": "get-interest",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID du centre d'intérêt",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Interest"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Supprime un centre d'intérêt par ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Interests"
                ],
                "summary": "Supprime un centre d'intérêt",
                "operationId": "delete-interest",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID du centre d'intérêt",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Modifie un centre d'intérêt par ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Interests"
                ],
                "summary": "Modifie un centre d'intérêt",
                "operationId": "update-interest",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID du centre d'intérêt",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Centre d'intérêt à modifier",
                        "name": "interest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.InterestPatchInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Interest"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Se connecter avec un email et un mot de passe",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Se connecter",
                "operationId": "login",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email de l'utilisateur",
                        "name": "email",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Mot de passe de l'utilisateur",
                        "name": "password",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK\"\t{ \"access_token\": \"token\", \"refresh_token\": \"token\" }",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/logs": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Récupérer les logs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Logs"
                ],
                "summary": "Récupérer les logs",
                "operationId": "get-logs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Date des logs (format: 2006-01-02)",
                        "name": "date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Type d'événement à filtrer",
                        "name": "event",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/controller.LogEntry"
                            }
                        }
                    },
                    "400": {
                        "description": "default"
                    },
                    "500": {
                        "description": "default"
                    }
                }
            }
        },
        "/messages": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Créer un message",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Messages"
                ],
                "summary": "Créer un message",
                "operationId": "post-message",
                "parameters": [
                    {
                        "description": "Contenu du message",
                        "name": "content",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "format": "uuid",
                        "description": "Message",
                        "name": "conversation_id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/organization/concerts": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Récupère les concerts par ID d'organisation",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Concerts"
                ],
                "summary": "Récupère les concerts par ID d'organisation",
                "operationId": "get-concerts-by-organization-id",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Concert"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/refresh": {
            "post": {
                "description": "Récupère un nouvel access token à partir d'un refresh token",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Récupère un nouvel access token",
                "operationId": "refresh-user",
                "parameters": [
                    {
                        "description": "Refresh token",
                        "name": "refresh_token",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Créé un utilisateur",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Créé un utilisateur",
                "operationId": "create-user",
                "parameters": [
                    {
                        "description": "Requête de création d'utilisateur",
                        "name": "formData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "OK\"\t\"example\":\t{ \"ID\": \"uuid\", \"email\": \"user@example.com\", \"firstname\": \"John\", \"lastname\": \"Doe\", \"role\": \"user\", \"image\": \"image.jpg\" }",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/registerorganizer": {
            "post": {
                "description": "Créé une organisation et son utilisateur",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Organization"
                ],
                "summary": "Créé une organisation et son utilisateur",
                "operationId": "create-organization-user",
                "parameters": [
                    {
                        "description": "Requête de création d'organisation et d'utilisateur",
                        "name": "formData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.RequestPayload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "OK\"\t{ \"organization\": { \"ID\": \"uuid\", \"name\": \"Organization\", \"description\": \"Organization description\" }, \"user\": {\"ID\": \"uuid\", \"email\": \"user@example.com\", \"firstname\": \"John\", \"lastname\": \"Doe\", \"role\": \"organizer\", \"image\": \"image.jpg\" } }",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/reservation": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a reservation for a concert category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reservation"
                ],
                "summary": "Create a reservation",
                "operationId": "create-reservation",
                "parameters": [
                    {
                        "format": "uuid",
                        "description": "Id de la catégorie de concert",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Ticket"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/reset-password": {
            "post": {
                "description": "Réinitialise le mot de passe avec un code de réinitialisation",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Réinitialise le mot de passe",
                "operationId": "reset-password",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Code de réinitialisation",
                        "name": "reset_code",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Nouveau mot de passe",
                        "name": "new_password",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/ticket_listing_reservation/{id}": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a reservation for a ticket listing",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reservation"
                ],
                "summary": "Create a ticket listing reservation",
                "operationId": "create-ticket-listing-reservation",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Ticket listing ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "format": "uuid",
                        "description": "Id du ticket listing",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Sale"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/ticket_listing_reservation_conversation/{id}": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a reservation for a ticket listing from a conversation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reservation"
                ],
                "summary": "Create a ticket listing reservation from conversation",
                "operationId": "create-ticket-listing-reservation-from-conversation",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Conversation ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "format": "uuid",
                        "description": "id de la conversation",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Sale"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/ticketlistings": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all ticket listings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ticket listing"
                ],
                "summary": "Get all ticket listings",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.TicketListing"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create ticket listings",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ticket listing"
                ],
                "summary": "Create ticket listings",
                "parameters": [
                    {
                        "description": "Ticket ID",
                        "name": "ticketId",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Price",
                        "name": "price",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.TicketListing"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/ticketlistings/concert/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get ticket listing by concert ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ticket listing"
                ],
                "summary": "Get ticket listing by concert ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Concert ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.TicketListing"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/ticketlistings/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get ticket listing by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ticket listing"
                ],
                "summary": "Get ticket listing by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "TicketListing ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TicketListing"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete ticket listing",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ticket listing"
                ],
                "summary": "Delete ticket listing",
                "parameters": [
                    {
                        "type": "string",
                        "description": "TicketListing ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update ticket listing",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Ticket listing"
                ],
                "summary": "Update ticket listing",
                "parameters": [
                    {
                        "type": "string",
                        "description": "TicketListing ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Price",
                        "name": "price",
                        "in": "body",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "description": "Status",
                        "name": "status",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TicketListing"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/tickets": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Récupère tous les tickets",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tickets"
                ],
                "summary": "Récupère tous les tickets",
                "operationId": "get-all-tickets",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Ticket"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Créé un ticket",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tickets"
                ],
                "summary": "Créé un ticket",
                "operationId": "create-ticket",
                "parameters": [
                    {
                        "description": "Ticket à créer",
                        "name": "ticket",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Ticket"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Ticket"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tickets/mytickets": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Récupère les tickets d'un utilisateur",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tickets"
                ],
                "summary": "Récupère les tickets d'un utilisateur",
                "operationId": "get-user-tickets",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Ticket"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tickets/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Récupère un ticket par ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tickets"
                ],
                "summary": "Récupère un ticket",
                "operationId": "get-ticket",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "ID du ticket",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Ticket"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Supprime un ticket par ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tickets"
                ],
                "summary": "Supprime un ticket",
                "operationId": "delete-ticket",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "ID du ticket",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "$ref": "#/definitions/models.Ticket"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Modifie un ticket par ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tickets"
                ],
                "summary": "Modifie un ticket",
                "operationId": "update-ticket",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "ID du ticket",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Champs à modifier",
                        "name": "ticket",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.TicketPatchInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Ticket"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/interests": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Récupère les centres d'intérêt de l'utilisateur",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Interests"
                ],
                "summary": "Récupère les centres d'intérêt de l'utilisateur",
                "operationId": "get-user-interests",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Interest"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/interests/{id}": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Ajoute un centre d'intérêt à l'utilisateur",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Interests"
                ],
                "summary": "Ajoute un centre d'intérêt à l'utilisateur",
                "operationId": "add-user-interest",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID du centre d'intérêt",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Interest"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Supprime un centre d'intérêt de l'utilisateur",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Interests"
                ],
                "summary": "Supprime un centre d'intérêt de l'utilisateur",
                "operationId": "remove-user-interest",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID du centre d'intérêt",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Récupère tous les utilisateurs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Récupère tous les utilisateurs",
                "operationId": "get-all-users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {}
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Récupère un utilisateur par ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Récupère un utilisateur",
                "operationId": "get-user",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "ID de l'utilisateur",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Supprime un utilisateur par ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Supprime un utilisateur",
                "operationId": "delete-user",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "ID de l'utilisateur",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Modifie un utilisateur par ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Modifie un utilisateur",
                "operationId": "update-user",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "ID de l'utilisateur",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Requête de modification d'utilisateur",
                        "name": "formData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {}
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/ws-chat": {
            "get": {
                "description": "Gère les connexions WebSocket pour le chat entre les utilisateurs",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "WebSockets"
                ],
                "summary": "Gérer les connexions WebSocket pour le chat",
                "operationId": "handle-websocket-chat",
                "responses": {
                    "101": {
                        "description": "Switching Protocols",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/ws-community": {
            "get": {
                "description": "Gère les connexions WebSocket pour les chats des artistes",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "WebSockets"
                ],
                "summary": "Gère les connexions WebSocket pour les chats des artistes",
                "operationId": "websocket-community",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "ID de l'artiste",
                        "name": "artistId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "101": {
                        "description": "Switching Protocols",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/ws-queue": {
            "get": {
                "description": "Gère les connexions WebSocket pour la file d'attente des concerts",
                "tags": [
                    "WebSockets"
                ],
                "summary": "Gère les connexions WebSocket pour la file d'attente des concerts",
                "operationId": "handle-websocket-queue",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "ID du concert",
                        "name": "concertId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "ID de l'utilisateur",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "101": {
                        "description": "Switching Protocols",
                        "schema": {
                            "$ref": "#/definitions/controller.Message"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controller.ArtistPatchInput": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "controller.CategoryPatchInput": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "controller.CreatePaymentIntentRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "controller.InterestPatchInput": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "controller.LogEntry": {
            "type": "object",
            "properties": {
                "bytes_in": {
                    "type": "integer"
                },
                "bytes_out": {
                    "type": "integer"
                },
                "error": {
                    "type": "string"
                },
                "event": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "latency": {
                    "type": "integer"
                },
                "latency_human": {
                    "type": "string"
                },
                "level": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "method": {
                    "type": "string"
                },
                "prefix": {
                    "type": "string"
                },
                "remote_ip": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                },
                "time": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                },
                "user_agent": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "controller.Message": {
            "type": "object",
            "properties": {
                "concertId": {
                    "type": "string"
                },
                "isFirstMessage": {
                    "type": "boolean"
                },
                "position": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "controller.RegisterRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "controller.RequestPayload": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstname": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "lastname": {
                    "type": "string"
                },
                "orgadescri": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "controller.TicketPatchInput": {
            "type": "object",
            "properties": {
                "concert_category_id": {
                    "type": "string"
                },
                "ticketListings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TicketListing"
                    }
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.Artist": {
            "type": "object",
            "properties": {
                "concerts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Concert"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "id": {
                    "description": "gorm.Model",
                    "type": "string"
                },
                "interest": {
                    "$ref": "#/definitions/models.Interest"
                },
                "interestId": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.Category": {
            "type": "object",
            "properties": {
                "concertCategories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ConcertCategory"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "id": {
                    "description": "gorm.Model",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.Concert": {
            "type": "object",
            "properties": {
                "artist": {
                    "$ref": "#/definitions/models.Artist"
                },
                "artistId": {
                    "type": "string"
                },
                "concertCategories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ConcertCategory"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "description": "gorm.Model",
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "interests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Interest"
                    }
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "organization": {
                    "$ref": "#/definitions/models.Organization"
                },
                "organizationId": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.ConcertCategory": {
            "type": "object",
            "properties": {
                "availableTickets": {
                    "type": "integer"
                },
                "category": {
                    "$ref": "#/definitions/models.Category"
                },
                "categoryId": {
                    "type": "integer"
                },
                "concert": {
                    "description": "Tickets          []Ticket ` + "`" + `gorm:\"-\"` + "`" + `",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Concert"
                        }
                    ]
                },
                "concertId": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "id": {
                    "description": "gorm.Model",
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "soldTickets": {
                    "type": "integer"
                },
                "tickets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Ticket"
                    }
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.Conversation": {
            "type": "object",
            "properties": {
                "buyer": {
                    "$ref": "#/definitions/models.User"
                },
                "buyerId": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "id": {
                    "description": "gorm.Model",
                    "type": "string"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Message"
                    }
                },
                "price": {
                    "type": "number"
                },
                "seller": {
                    "$ref": "#/definitions/models.User"
                },
                "sellerId": {
                    "type": "string"
                },
                "ticketListing": {
                    "$ref": "#/definitions/models.TicketListing"
                },
                "ticketListingId": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.Interest": {
            "type": "object",
            "properties": {
                "concerts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Concert"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "id": {
                    "description": "gorm.Model",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.User"
                    }
                }
            }
        },
        "models.Message": {
            "type": "object",
            "properties": {
                "author": {
                    "$ref": "#/definitions/models.User"
                },
                "authorId": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "conversation": {
                    "$ref": "#/definitions/models.Conversation"
                },
                "conversationId": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "id": {
                    "description": "gorm.Model",
                    "type": "string"
                },
                "readed": {
                    "type": "boolean"
                },
                "sentAt": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.Organization": {
            "type": "object",
            "properties": {
                "concerts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Concert"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "description": "gorm.Model",
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.User"
                    }
                }
            }
        },
        "models.Sale": {
            "type": "object",
            "properties": {
                "buyer": {
                    "$ref": "#/definitions/models.User"
                },
                "buyerId": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "finalPrice": {
                    "type": "number"
                },
                "id": {
                    "description": "gorm.Model",
                    "type": "string"
                },
                "seller": {
                    "$ref": "#/definitions/models.User"
                },
                "sellerId": {
                    "type": "string"
                },
                "ticketListingId": {
                    "type": "string"
                },
                "ticketSold": {
                    "$ref": "#/definitions/models.TicketListing"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.Ticket": {
            "type": "object",
            "properties": {
                "concertCategory": {
                    "$ref": "#/definitions/models.ConcertCategory"
                },
                "concertCategoryId": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "id": {
                    "description": "gorm.Model",
                    "type": "string"
                },
                "maxPrice": {
                    "type": "number"
                },
                "ticketListings": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TicketListing"
                    }
                },
                "updatedAt": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "models.TicketListing": {
            "type": "object",
            "properties": {
                "conversations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Conversation"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "id": {
                    "description": "gorm.Model\nID            uuid.UUID       ` + "`" + `gorm:\"unique;type:uuid;primaryKey;default:uuid_generate_v4()\" json:\"id\"` + "`" + `\nPrice         float64         ` + "`" + `gorm:\"not null\" json:\"price\"` + "`" + `\nStatus        string          ` + "`" + `gorm:\"not null\" json:\"status\"` + "`" + `\nCreatedAt     time.Time       ` + "`" + `json:\"createdAt\"` + "`" + `\nUpdatedAt     time.Time       ` + "`" + `json:\"updatedAt\"` + "`" + `\nDeletedAt     *time.Time      ` + "`" + `gorm:\"index\"` + "`" + `\nTicketId      uuid.UUID       ` + "`" + `gorm:\"not null\" json:\"ticketId\"` + "`" + `",
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "sale": {
                    "$ref": "#/definitions/models.Sale"
                },
                "status": {
                    "type": "string"
                },
                "ticket": {
                    "$ref": "#/definitions/models.Ticket"
                },
                "ticketId": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "conversationsAsBuyer": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Conversation"
                    }
                },
                "conversationsAsSeller": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Conversation"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "email": {
                    "description": "l'email de l'utilisateur\n\nrequired: true\nexample: john@doe.com",
                    "type": "string"
                },
                "firstname": {
                    "description": "le prénom de l'utilisateur\n\nrequired: true\nexample: John",
                    "type": "string"
                },
                "id": {
                    "description": "gorm.Model\nl'ID de l'utilisateur\n\nrequired: true\nexample: 123e4567-e89b-12d3-a456-426614174000",
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "interests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Interest"
                    }
                },
                "lastConnexion": {
                    "type": "string"
                },
                "lastname": {
                    "description": "le nom de l'utilisateur\n\nrequired: true\nexample: Doe",
                    "type": "string"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Message"
                    }
                },
                "organization": {
                    "$ref": "#/definitions/models.Organization"
                },
                "organizationId": {
                    "type": "string"
                },
                "resetCodeExpiration": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "salesAsBuyer": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Sale"
                    }
                },
                "salesAsSeller": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Sale"
                    }
                },
                "tickets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Ticket"
                    }
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "Provide your JWT token in the format: Bearer {token}",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Weezemaster API",
	Description:      "This is the swagger documentation for the Weezemaster API.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
