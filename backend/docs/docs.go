// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/categories": {
            "get": {
                "description": "Récupère toutes les catégories",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Récupère toutes les catégories",
                "operationId": "get-all-categories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Category"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Créé une catégorie",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Créé une catégorie",
                "operationId": "create-category",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Category"
                            }
                        }
                    }
                }
            }
        },
        "/categories/{id}": {
            "get": {
                "description": "Récupère une catégorie par ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Récupère une catégorie",
                "operationId": "get-category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID de la catégorie",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Category"
                        }
                    }
                }
            },
            "delete": {
                "description": "Supprime une catégorie par ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Supprime une catégorie",
                "operationId": "delete-category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID de la catégorie",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "patch": {
                "description": "Modifie une catégorie par ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Categories"
                ],
                "summary": "Modifie une catégorie",
                "operationId": "update-category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID de la catégorie",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Category"
                        }
                    }
                }
            }
        },
        "/concerts": {
            "get": {
                "description": "Récupère tous les concerts",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Concerts"
                ],
                "summary": "Récupère tous les concerts",
                "operationId": "get-all-concerts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Concert"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Créé un concert",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Concerts"
                ],
                "summary": "Créé un concert",
                "operationId": "create-concert",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Concert"
                        }
                    }
                }
            }
        },
        "/concerts/{id}": {
            "get": {
                "description": "Récupère un concert par ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Concerts"
                ],
                "summary": "Récupère un concert",
                "operationId": "get-concert",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID du concert",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Concert"
                        }
                    }
                }
            },
            "delete": {
                "description": "Supprime un concert par ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Concerts"
                ],
                "summary": "Supprime un concert",
                "operationId": "delete-concert",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID du concert",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "patch": {
                "description": "Modifie un concert par ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Concerts"
                ],
                "summary": "Modifie un concert",
                "operationId": "update-concert",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID du concert",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Concert"
                        }
                    }
                }
            }
        },
        "/interests": {
            "get": {
                "description": "Récupère tous les centres d'intérêts",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Interests"
                ],
                "summary": "Récupère tous les centres d'intérêts",
                "operationId": "get-all-interests",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Interest"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Créé un centre d'intérêt",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Interests"
                ],
                "summary": "Créé un centre d'intérêt",
                "operationId": "create-interest",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Interest"
                            }
                        }
                    }
                }
            }
        },
        "/interests/{id}": {
            "get": {
                "description": "Récupère un centre d'intérêt par ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Interests"
                ],
                "summary": "Récupère un centre d'intérêt",
                "operationId": "get-interest",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID du centre d'intérêt",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Interest"
                        }
                    }
                }
            },
            "delete": {
                "description": "Supprime un centre d'intérêt par ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Interests"
                ],
                "summary": "Supprime un centre d'intérêt",
                "operationId": "delete-interest",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID du centre d'intérêt",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "patch": {
                "description": "Modifie un centre d'intérêt par ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Interests"
                ],
                "summary": "Modifie un centre d'intérêt",
                "operationId": "update-interest",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID du centre d'intérêt",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Interest"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Se connecter avec un email et un mot de passe",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Se connecter",
                "operationId": "login",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email de l'utilisateur",
                        "name": "email",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Mot de passe de l'utilisateur",
                        "name": "password",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Créé un utilisateur",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Créé un utilisateur",
                "operationId": "create-user",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Récupère tous les utilisateurs",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Récupère tous les utilisateurs",
                "operationId": "get-all-users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.User"
                            }
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "description": "Récupère un utilisateur par ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Récupère un utilisateur",
                "operationId": "get-user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID de l'utilisateur",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            },
            "delete": {
                "description": "Supprime un utilisateur par ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Supprime un utilisateur",
                "operationId": "delete-user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID de l'utilisateur",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "patch": {
                "description": "Modifie un utilisateur par ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Modifie un utilisateur",
                "operationId": "update-user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID de l'utilisateur",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Category": {
            "type": "object",
            "properties": {
                "concertCategories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ConcertCategory"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "id": {
                    "description": "gorm.Model",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.Concert": {
            "type": "object",
            "properties": {
                "concertCategories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ConcertCategory"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "description": "gorm.Model",
                    "type": "string"
                },
                "interests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Interest"
                    }
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "organization": {
                    "$ref": "#/definitions/models.Organization"
                },
                "organizationId": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.ConcertCategory": {
            "type": "object",
            "properties": {
                "category": {
                    "$ref": "#/definitions/models.Category"
                },
                "categoryId": {
                    "type": "integer"
                },
                "concert": {
                    "$ref": "#/definitions/models.Concert"
                },
                "concertId": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "id": {
                    "description": "gorm.Model",
                    "type": "string"
                },
                "nbTickets": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                },
                "tickets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Ticket"
                    }
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.Conversation": {
            "type": "object",
            "properties": {
                "buyer": {
                    "$ref": "#/definitions/models.User"
                },
                "buyerId": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "id": {
                    "description": "gorm.Model",
                    "type": "string"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Message"
                    }
                },
                "ticketListing": {
                    "$ref": "#/definitions/models.TicketListing"
                },
                "ticketListingId": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.Interest": {
            "type": "object",
            "properties": {
                "concerts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Concert"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "id": {
                    "description": "gorm.Model",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.User"
                    }
                }
            }
        },
        "models.Message": {
            "type": "object",
            "properties": {
                "author": {
                    "$ref": "#/definitions/models.User"
                },
                "authorId": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                },
                "conversation": {
                    "$ref": "#/definitions/models.Conversation"
                },
                "conversationId": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "id": {
                    "description": "gorm.Model",
                    "type": "string"
                },
                "readed": {
                    "type": "boolean"
                },
                "sentAt": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.Organization": {
            "type": "object",
            "properties": {
                "concerts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Concert"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "description": "gorm.Model",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.User"
                    }
                }
            }
        },
        "models.Sale": {
            "type": "object",
            "properties": {
                "buyer": {
                    "$ref": "#/definitions/models.User"
                },
                "buyerId": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "finalPrice": {
                    "type": "number"
                },
                "id": {
                    "description": "gorm.Model",
                    "type": "string"
                },
                "seller": {
                    "$ref": "#/definitions/models.User"
                },
                "sellerId": {
                    "type": "string"
                },
                "ticketListingId": {
                    "type": "string"
                },
                "ticketSold": {
                    "$ref": "#/definitions/models.TicketListing"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.Ticket": {
            "type": "object",
            "properties": {
                "concertCategory": {
                    "$ref": "#/definitions/models.ConcertCategory"
                },
                "concertCategoryId": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "id": {
                    "description": "gorm.Model",
                    "type": "string"
                },
                "ticketListing": {
                    "$ref": "#/definitions/models.TicketListing"
                },
                "updatedAt": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/models.User"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "models.TicketListing": {
            "type": "object",
            "properties": {
                "conversations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Conversation"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "id": {
                    "description": "gorm.Model",
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "sale": {
                    "$ref": "#/definitions/models.Sale"
                },
                "status": {
                    "type": "string"
                },
                "ticket": {
                    "$ref": "#/definitions/models.Ticket"
                },
                "ticketId": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "conversations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Conversation"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "email": {
                    "description": "l'email de l'utilisateur\n\nrequired: true\nexample: john@doe.com",
                    "type": "string"
                },
                "firstname": {
                    "description": "le prénom de l'utilisateur\n\nrequired: true\nexample: John",
                    "type": "string"
                },
                "id": {
                    "description": "gorm.Model\nl'ID de l'utilisateur\n\nrequired: true\nexample: 123e4567-e89b-12d3-a456-426614174000",
                    "type": "string"
                },
                "interests": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Interest"
                    }
                },
                "lastConnexion": {
                    "type": "string"
                },
                "lastname": {
                    "description": "le nom de l'utilisateur\n\nrequired: true\nexample: Doe",
                    "type": "string"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Message"
                    }
                },
                "organization": {
                    "$ref": "#/definitions/models.Organization"
                },
                "organizationId": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "salesAsBuyer": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Sale"
                    }
                },
                "salesAsSeller": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Sale"
                    }
                },
                "tickets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Ticket"
                    }
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Weezemaster API",
	Description:      "This is the swagger documentation for the Weezemaster API.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
